!!!!! allebei op solo host en red compartida

#####
Pings testen van A naar B

tcpdump mist dus installeer ik die eerst
sudo apt install tcpdump -y


CentOS
[yazzouzi@localhost ~]$ su -
Wachtwoord: 
[root@localhost ~]# apt install tcpdump -y
bash: apt: commando niet gevonden...
[root@localhost ~]# dnf install tcpdump -y
CentOS Stream 9 - BaseOS                        4.2 MB/s | 9.9 MB     00:02    
CentOS Stream 9 - AppStream                     3.3 MB/s |  22 MB     00:06    
CentOS Stream 9 - Extras packages               125 kB/s |  20 kB     00:00    
Pakket tcpdump-14:4.99.0-9.el9.aarch64 is al ge√Ønstalleerd.
Afhankelijkheden opgelost.
Niets te doen.
Klaar!
[root@localhost ~]# 


Ubuntu 
ubuntu@ubuntu:~$ sudo apt install tcpdump -y
[sudo] password for ubuntu: 
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following NEW packages will be installed:
  tcpdump
0 upgraded, 1 newly installed, 0 to remove and 471 not upgraded.
Need to get 497 kB of archives.
After this operation, 1402 kB of additional disk space will be used.
Get:1 http://ports.ubuntu.com/ubuntu-ports jammy-updates/main arm64 tcpdump arm64 4.99.1-3ubuntu0.2 [497 kB]
Fetched 497 kB in 1s (752 kB/s) 
debconf: delaying package configuration, since apt-utils is not installed
Selecting previously unselected package tcpdump.
(Reading database ... 173656 files and directories currently installed.)
Preparing to unpack .../tcpdump_4.99.1-3ubuntu0.2_arm64.deb ...
Unpacking tcpdump (4.99.1-3ubuntu0.2) ...
Setting up tcpdump (4.99.1-3ubuntu0.2) ...
Processing triggers for man-db (2.10.2-1) ...
debconf: unable to initialize frontend: Dialog
debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 78.)
debconf: falling back to frontend: Readline
Scanning processes...                                                           
Scanning linux images...                                                        

Running kernel seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.

####
Nu ga ik vanag machine B sniffen en andere 

Ip adres vinden
ubuntu@ubuntu:~$ ip a 
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
2: enp0s1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether b6:55:ff:97:94:db brd ff:ff:ff:ff:ff:ff
    inet 192.168.64.11/24 metric 100 brd 192.168.64.255 scope global dynamic enp0s1
       valid_lft 3498sec preferred_lft 3498sec
    inet6 fdcb:aca9:d40a:5300:b455:ffff:fe97:94db/64 scope global dynamic mngtmpaddr noprefixroute 
       valid_lft 2591900sec preferred_lft 604700sec
    inet6 fe80::b455:ffff:fe97:94db/64 scope link 
       valid_lft forever preferred_lft forever
3: enp0s2: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN group default qlen 1000
    link/ether 9e:78:f8:cb:b2:aa brd ff:ff:ff:ff:ff:ff
ubuntu@ubuntu:~$ 

tcpdump: enp0s8: No such device exists
(SIOCGIFHWADDR: No such device)
[root@localhost ~]# ip a 
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
2: enp0s1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether 5e:65:d2:0e:23:07 brd ff:ff:ff:ff:ff:ff
    inet 192.168.64.12/24 brd 192.168.64.255 scope global dynamic noprefixroute enp0s1
       valid_lft 2721sec preferred_lft 2721sec
    inet6 fdcb:aca9:d40a:5300:5c65:d2ff:fe0e:2307/64 scope global dynamic noprefixroute 
       valid_lft 2592000sec preferred_lft 604800sec
    inet6 fe80::5c65:d2ff:fe0e:2307/64 scope link noprefixroute 
       valid_lft forever preferred_lft forever
3: enp0s2: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether da:39:2e:a0:81:da brd ff:ff:ff:ff:ff:ff
    inet 192.168.128.2/24 brd 192.168.128.255 scope global dynamic noprefixroute enp0s2
       valid_lft 2721sec preferred_lft 2721sec
    inet6 fdd7:4277:cab5:1226:d839:2eff:fea0:81da/64 scope global dynamic noprefixroute 
       valid_lft 2591961sec preferred_lft 604761sec
    inet6 fe80::d839:2eff:fea0:81da/64 scope link noprefixroute 
       valid_lft forever preferred_lft forever
[root@localhost ~]# 

####firewall actief op CentOS downgooien




############
HIER BEGINT DE OPLOSSING 

Checken of ze elkaar kunnen pignen:
[yazzouzi@localhost ~]$ ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
2: enp0s1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether 5e:65:d2:0e:23:07 brd ff:ff:ff:ff:ff:ff
    inet 192.168.64.12/24 brd 192.168.64.255 scope global dynamic noprefixroute enp0s1
       valid_lft 3561sec preferred_lft 3561sec
    inet6 fdcb:aca9:d40a:5300:5c65:d2ff:fe0e:2307/64 scope global dynamic noprefixroute 
       valid_lft 2591965sec preferred_lft 604765sec
    inet6 fe80::5c65:d2ff:fe0e:2307/64 scope link noprefixroute 
       valid_lft forever preferred_lft forever
[yazzouzi@localhost ~]$ ping 192.168.64.14
PING 192.168.64.14 (192.168.64.14) 56(84) bytes of data.
64 bytes from 192.168.64.14: icmp_seq=1 ttl=64 time=0.958 ms
64 bytes from 192.168.64.14: icmp_seq=2 ttl=64 time=1.99 ms
64 bytes from 192.168.64.14: icmp_seq=3 ttl=64 time=1.92 ms
^C
--- 192.168.64.14 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2007ms
rtt min/avg/max/mdev = 0.958/1.620/1.985/0.468 ms
[yazzouzi@localhost ~]$ 

[yazzouzi@localhost ~]$ ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
2: enp0s1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether da:39:2e:a0:81:da brd ff:ff:ff:ff:ff:ff
    inet 192.168.64.14/24 brd 192.168.64.255 scope global dynamic noprefixroute enp0s1
       valid_lft 3559sec preferred_lft 3559sec
    inet6 fdcb:aca9:d40a:5300:d839:2eff:fea0:81da/64 scope global dynamic noprefixroute 
       valid_lft 2591962sec preferred_lft 604762sec
    inet6 fe80::d839:2eff:fea0:81da/64 scope link noprefixroute 
       valid_lft forever preferred_lft forever
[yazzouzi@localhost ~]$ ping 192.168.64.12
PING 192.168.64.12 (192.168.64.12) 56(84) bytes of data.
64 bytes from 192.168.64.12: icmp_seq=1 ttl=64 time=1.68 ms
64 bytes from 192.168.64.12: icmp_seq=2 ttl=64 time=2.39 ms
64 bytes from 192.168.64.12: icmp_seq=3 ttl=64 time=2.23 ms
64 bytes from 192.168.64.12: icmp_seq=4 ttl=64 time=2.39 ms
^[c64 bytes from 192.168.64.12: icmp_seq=5 ttl=64 time=2.78 ms
^C
--- 192.168.64.12 ping statistics ---
5 packets transmitted, 5 received, 0% packet loss, time 4013ms
rtt min/avg/max/mdev = 1.680/2.291/2.775/0.355 ms
[yazzouzi@localhost ~]$ 

#### DNSLOOKUP kdg.be
[root@localhost ~]# nslookup www.kdg.be
Server:		192.168.64.1
Address:	192.168.64.1#53

Non-authoritative answer:
Name:	www.kdg.be
Address: 185.135.13.159
Name:	www.kdg.be
Address: 2a06:efc0:0:102::94

[root@localhost ~]# D

#####
3) iptables.sh script 

[root@localhost ~]# vi iptables.sh
[root@localhost ~]# chmod +x iptables.sh 
[root@localhost ~]# 

inhoud in de file te vinden
als ik script uitvoer krijg ik dit:
[root@localhost ~]# ./iptables.sh 
Chain INPUT (policy DROP 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         
    0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp spt:80 dpts:1025:65535

Chain FORWARD (policy DROP 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         

Chain OUTPUT (policy DROP 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         
    0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:80
[root@localhost ~]# 

#####
4) welke iptable commandos aan het begin van het script maken de chains leeg? 
iptables -F INPUT
iptables -F OUTPUT
iptables -F FORWARD
iptables -X
iptables -Z

####
5) welke iptable commandos stellen alle default policies in op DROP?
iptables -P INPUT DROP
iptables -P OUTPUT DROP
iptables -P FORWARD DROP

####
6) loggen van nslookup requests

hier update ik de iptables.sh script voor
iptables -A OUTPUT -p udp --dport 53 -j LOG --log-prefix "UDP IPTABLES: "


[root@localhost ~]# vi iptables.sh
[root@localhost ~]# chmod +x iptables.sh 
[root@localhost ~]# ./iptables.sh 
Chain INPUT (policy DROP 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         
    0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp spt:80 dpts:1025:65535
    0     0 ACCEPT     udp  --  *      *       0.0.0.0/0            0.0.0.0/0            udp spt:53

Chain FORWARD (policy DROP 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         

Chain OUTPUT (policy DROP 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         
    0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:80
    0     0 LOG        udp  --  *      *       0.0.0.0/0            0.0.0.0/0            udp dpt:53 LOG flags 0 level 4 prefix "UDP IPTABLES: "
    0     0 ACCEPT     udp  --  *      *       0.0.0.0/0            0.0.0.0/0            udp dpt:53
[root@localhost ~]# sudo iptables -L -n -v
Chain INPUT (policy DROP 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         
    0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp spt:80 dpts:1025:65535
    2   304 ACCEPT     udp  --  *      *       0.0.0.0/0            0.0.0.0/0            udp spt:53

Chain FORWARD (policy DROP 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         

Chain OUTPUT (policy DROP 4 packets, 304 bytes)
 pkts bytes target     prot opt in     out     source               destination         
    0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:80
    2   190 LOG        udp  --  *      *       0.0.0.0/0            0.0.0.0/0            udp dpt:53 LOG flags 0 level 4 prefix "UDP IPTABLES: "
    2   190 ACCEPT     udp  --  *      *       0.0.0.0/0            0.0.0.0/0            udp dpt:53
[root@localhost ~]# curl http://example.com
<!doctype html>
<html>
<head>
    <title>Example Domain</title>

    <meta charset="utf-8" />
    <meta http-equiv="Content-type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type="text/css">
    body {
        background-color: #f0f0f2;
        margin: 0;
        padding: 0;
        font-family: -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
        
    }
    div {
        width: 600px;
        margin: 5em auto;
        padding: 2em;
        background-color: #fdfdff;
        border-radius: 0.5em;
        box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);
    }
    a:link, a:visited {
        color: #38488f;
        text-decoration: none;
    }
    @media (max-width: 700px) {
        div {
            margin: 0 auto;
            width: auto;
        }
    }
    </style>    
</head>

<body>
<div>
    <h1>Example Domain</h1>
    <p>This domain is for use in illustrative examples in documents. You may use this
    domain in literature without prior coordination or asking for permission.</p>
    <p><a href="https://www.iana.org/domains/example">More information...</a></p>
</div>
</body>
</html>
[root@localhost ~]# nslookup www.kdg.be
Server:		192.168.64.1
Address:	192.168.64.1#53

Non-authoritative answer:
Name:	www.kdg.be
Address: 185.135.13.159
Name:	www.kdg.be
Address: 2a06:efc0:0:102::94

[root@localhost ~]# sudo tail -f /var/log/messages
Sep 24 14:25:59 localhost systemd[1]: packagekit.service: Consumed 1.109s CPU time.
Sep 24 14:28:27 localhost pipewire[2109]: spa.audioconvert: 0xaaaad6e76bf0: (0 suppressed) out of buffers on port 0 1
Sep 24 14:29:22 localhost kernel: UDP IPTABLES: IN= OUT=enp0s1 SRC=192.168.64.14 DST=192.168.64.1 LEN=72 TOS=0x00 PREC=0x00 TTL=64 ID=18425 DF PROTO=UDP SPT=51415 DPT=53 LEN=52 
Sep 24 14:29:22 localhost kernel: UDP IPTABLES: IN= OUT=enp0s1 SRC=192.168.64.14 DST=192.168.64.1 LEN=118 TOS=0x00 PREC=0x00 TTL=64 ID=47451 DF PROTO=UDP SPT=60150 DPT=53 LEN=98 
Sep 24 14:29:42 localhost kernel: UDP IPTABLES: IN= OUT=enp0s1 SRC=192.168.64.14 DST=192.168.64.1 LEN=57 TOS=0x00 PREC=0x00 TTL=64 ID=25297 DF PROTO=UDP SPT=44330 DPT=53 LEN=37 
Sep 24 14:29:42 localhost kernel: UDP IPTABLES: IN= OUT=enp0s1 SRC=192.168.64.14 DST=192.168.64.1 LEN=57 TOS=0x00 PREC=0x00 TTL=64 ID=25298 DF PROTO=UDP SPT=44330 DPT=53 LEN=37 
Sep 24 14:29:48 localhost kernel: UDP IPTABLES: IN= OUT=enp0s1 SRC=192.168.64.14 DST=192.168.64.1 LEN=56 TOS=0x00 PREC=0x00 TTL=64 ID=47556 PROTO=UDP SPT=43192 DPT=53 LEN=36 
Sep 24 14:29:48 localhost kernel: UDP IPTABLES: IN= OUT=enp0s1 SRC=192.168.64.14 DST=192.168.64.1 LEN=56 TOS=0x00 PREC=0x00 TTL=64 ID=47557 PROTO=UDP SPT=60182 DPT=53 LEN=36 
Sep 24 14:29:52 localhost kernel: UDP IPTABLES: IN= OUT=enp0s1 SRC=192.168.64.14 DST=192.168.64.1 LEN=72 TOS=0x00 PREC=0x00 TTL=64 ID=20421 DF PROTO=UDP SPT=53689 DPT=53 LEN=52 
Sep 24 14:29:52 localhost kernel: UDP IPTABLES: IN= OUT=enp0s1 SRC=192.168.64.14 DST=192.168.64.1 LEN=118 TOS=0x00 PREC=0x00 TTL=64 ID=17202 DF PROTO=UDP SPT=36673 DPT=53 LEN=98 


####
7) schrijf ip6tables die ipv6 pings blokkeren maar IPv4 toelaat
adden in de iptables.sh

# Blokkeer IPv6 pings (ICMPv6)
ip6tables -F
ip6tables -P INPUT DROP
ip6tables -P OUTPUT ACCEPT
ip6tables -A INPUT -p icmpv6 -j DROP


10) schrijf een loopscriptje in shell dat met nemesis -icmp pings uitvoert 
[root@localhost ~]# sudo dnf install epel-release -y
sudo dnf install nemesis -y
Laatste metadata-expiratie-check: 1:04:56 geleden op wo 24 sep 2025 13:47:35.
Afhankelijkheden opgelost.
================================================================================
 Pakket                  Architectuur Versie          Repo                Grootte
================================================================================
Installeren:
 epel-release            noarch       9-7.el9         extras-common        19 k
Zwakke afhankelijkheden worden ge√Ønstalleerd:
 epel-next-release       noarch       9-7.el9         extras-common       8.1 k

Transactie-overzicht
================================================================================
Installeren  2 Pakketten

Totale downloadgrootte: 27 k
Installatiegrootte: 29 k
Downloaden pakketten:

11)
maak een DNS request met nemesis als SRC en DST je eigen adres

nemesis-dns -r -d enp0s1 -S 192.168.128.24 -D 192.168.128.24 -q www.kdg.be

üîπ Oefening 12
Opdracht: Schrijf iptables regels voor UDP die enkel verkeer toelaten dat je zelf hebt aangevraagd.

# Sta uitgaande UDP toe
iptables -A OUTPUT -p udp -j ACCEPT

# Sta binnenkomend UDP enkel toe als het antwoord is (ESTABLISHED)
iptables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT

üîπ Oefening 13
Opdracht: Voer iptables -n -L INPUT uit.
üëâ Je krijgt te zien:
Policy = DROP
Regels die je zelf toegevoegd hebt (bijv. ICMP met rate-limit, DNS INPUT sport 53, TCP sport 80).
Alles wat niet matcht ‚Üí valt onder de policy = DROP.

# 14. ACL: Sta alleen uitgaand ICMP toe, blokkeer inkomend
iptables -A OUTPUT -p icmp -j ACCEPT
iptables -A INPUT -p icmp -j DROP
